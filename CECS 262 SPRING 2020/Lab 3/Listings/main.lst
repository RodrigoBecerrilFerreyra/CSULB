C51 COMPILER V9.60.0.0   MAIN                                                              02/21/2020 11:19:18 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Keil uVision 5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTE
                    -XTEND PRINT(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <reg51.h>
   2          // By Rodrigo Becerril Ferreyra
   3          
   4          unsigned int magicNum = 8192; //2^13
   5          
   6          //Required functions from previous labs for pattern();
   7          void wait(unsigned int cycles);
   8          void ls(unsigned char times);
   9          void rs(unsigned char times);
  10          void bounce2(void);
  11          void pattern(void);
  12          
  13          ////////////////////////////////
  14          
  15          // These three are the mode selection bits
  16          sbit mode1 = P0^7;
  17          sbit mode2 = P0^6;
  18          sbit mode3 = P0^5;
  19          // These three are for the OR gate in mode2
  20          sbit or1   = P0^0;
  21          sbit or2   = P0^1;
  22          sbit or3   = P0^2;
  23          
  24          // Output bit for mode2
  25          sbit out   = P1^1;
  26          
  27          int main(void)
  28          {
  29   1        P1 = 0x00; //output
  30   1        P0 = 0xFF; //input
  31   1        
  32   1        while(mode1) //Using while instead of if in order to keep count
  33   1          {P1 += 1; wait(magicNum);}
  34   1        while(mode2)
  35   1          out = (or1 || or2 || or3); //assigns either a 1 or 0
  36   1        while(mode3)
  37   1          pattern(); //FIXME: pattern does not break when switch is turned off when running
  38   1        
  39   1        return 0;
  40   1      }
  41          
  42          ////////////////////////////////
  43          
  44          void pattern(void) //pattern in Lab 1/Lab 2
  45          {
  46   1        unsigned char i;
  47   1        
  48   1        for(i=0;i<2;i++){bounce2();}
  49   1        for(i=0;i<2;i++){rs(1); ls(1);}
  50   1        rs(2); ls(2);
  51   1      }
  52          
  53          void wait(unsigned int cycles)
  54          {
C51 COMPILER V9.60.0.0   MAIN                                                              02/21/2020 11:19:18 PAGE 2   

  55   1        unsigned int i;
  56   1        for(i = 0; i < cycles; i++);
  57   1      }
  58          
  59          void ls(unsigned char times)
  60          {
  61   1        /**shifts one bit from the right to the left*/
  62   1        unsigned char i, j;
  63   1        
  64   1        for(j=0; j<times; j++)
  65   1        {
  66   2          P1 = 0x01;
  67   2          
  68   2          for(i = 0; i < 8; i++)
  69   2          {
  70   3            wait(magicNum);
  71   3            P1 = P1 << 1;
  72   3          }
  73   2        }
  74   1      }
  75          
  76          void rs(unsigned char times)
  77          {
  78   1        /**Shifts one bit from the right to the left*/
  79   1        unsigned char i, j;
  80   1        
  81   1        for(j=0; j<times; j++)
  82   1        {
  83   2          P1 = 0x80;
  84   2          
  85   2          for(i = 0; i < 8; i++)
  86   2          {
  87   3            wait(magicNum);
  88   3            P1 = P1 >> 1;
  89   3          }
  90   2        }
  91   1      }
  92          
  93          void bounce2(void)
  94          {
  95   1        /**Bounces two bits together*/
  96   1        unsigned char i;
  97   1        unsigned char first;
  98   1        unsigned char second;
  99   1        
 100   1          first = 0x01;
 101   1          second = 0x80;
 102   1          for(i = 0; i < 8; i++)
 103   1          {
 104   2            
 105   2            P1 = first | second;
 106   2            wait(magicNum);
 107   2            
 108   2            first = first << 1;
 109   2            second = second >> 1;
 110   2            
 111   2          }
 112   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    244    ----
C51 COMPILER V9.60.0.0   MAIN                                                              02/21/2020 11:19:18 PAGE 3   

   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
